name: NuGet Build

on:
  push:
    tags:
      - '*'

jobs:
  release:    
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub release
        uses: Roang-zero1/github-create-release-action@master
        with:
          version_regex: ^(=|>=|<=|=>|=<|>|<|!=|~|~>|\^)?(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
          
    - name: Echo - Latest Version Tag
      id: latest_tag
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
    
    - name: Print
      run:
        echo $VERSION
      env:
        VERSION: ${{ steps.latest_tag.outputs.VERSION }}
        
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.200

    - name: Restore NuGet Packages
      run: dotnet restore
      
    - name: Build - Release
      run: dotnet build --configuration Release --no-restore /p:Version=$VERSION
      env:
        VERSION: ${{ steps.latest_tag.outputs.VERSION }}

    - name: Upload Blazorise.Components
      uses: actions/upload-artifact@v1
      with:
        name: Blazorise-Packages
        path: ./Packages/
